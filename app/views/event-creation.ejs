<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/event-creation.css">
  <title>LIGMA Event Creation</title>

  <!-- OpenStreetMap Shtuff-->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
</head>

<body>

  <div class="container">
    <h2>Event Creation</h2>
    <div class="tab-container">
      <img src="/img/IU-tab.png" alt="Tab Image" class="tab-image">
    </div>

    <form id="create-event-forum" action="/create-event" method="POST">
      <input type="submit" id="hidden-submit" hidden>
      <div class="form-group">
        <label for="organizer-name">Your Full Name:</label>
        <input type="text" id="organizer-name" name="organizerName" required>
      </div>
      <div class="form-group">
        <label for="email">IU Email:</label>
        <input type="email" id="email" name="email" required>
      </div>
      <div class="form-group" id="eventName-field">
        <label for="event-name">Event Name:</label>
        <input type="text" id="event-name" name="eventName" required>
      </div>
      <div class="form-group">
        <label for="description">Event Description:</label>
        <textarea id="description" name="description" rows="4"></textarea>
      </div>
      <div class="form-group">
        <label for="event-date-time">Event Date and Time:</label>
        <input type="datetime-local" id="event-date-time" name="eventDateTime" required>
      </div>
      <div class="form-group">
        <label for="location-verification">Require Location Verification:</label>
        <input type="checkbox" id="location-verification" name="locationVerification" onchange="toggleMapVisibility()">
      </div>
      <div class="form-group map-container" id="map-container" style="display: none;">
        <label for="map">Select Event Location:</label>
        <div id="map" style="height: 300px;"></div>
        <input type="hidden" id="latitude" name="latitude">
        <input type="hidden" id="longitude" name="longitude">
        <div class="form-group">
          <label for="radius-slider">Event Radius (meters):</label>
          <input type="range" id="radius-slider" min="10" max="1000" value="100" oninput="updateRadius(this.value)">
          <span id="radius-value">100</span> meters
          <input type="hidden" id="radius" name="radius">
        </div>
        <div class="form-group">
          <label for="address">Or, lookup event adress:</label>
          <input type="text" id="address" name="address">
          <button type="button" onclick="geocodeAddress()">Lookup Address</button>
        </div>
      </div>
      <div class="form-group">
        <label for="extra_info">Require Extra Information? (Major, Cohort, Year)</label>
        <input type="checkbox" id="extra-info" name="extra_info">
      </div>
      <div class="form-group">
        <label for="password">Set Your Event Password:</label>
        <input type="password" id="password" name="password" required>
      </div>
      <button type="button" class="btn" onclick="trySubmit()">Create Event</button>
    </form>
  </div>

  <script>
    var map;
    var marker;
    var circle;


    function initMap() {
      map = L.map('map').setView([39.168199, -86.517222], 15); // Set the initial position and zoom level of the map

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: 'Â© OpenStreetMap contributors'
      }).addTo(map);

      // Add a click event listener to the map to allow users to select a location
      map.on('click', function (e) {
        placeMarker(e.latlng);
      });
    }

    function placeMarker(latlng) {
      // If a marker already exists, remove it
      if (marker) {
        map.removeLayer(marker);
      }
      if (circle) {
        map.removeLayer(circle);
      }

      // Create a new marker and set its position
      marker = L.marker(latlng).addTo(map);

      // Create a circle around the marker with the initial radius
      var initialRadius = parseInt(document.getElementById('radius-slider').value, 10);
      circle = L.circle(latlng, { radius: initialRadius }).addTo(map);

      // Update hidden form fields with latitude, longitude, and radius
      document.getElementById('latitude').value = latlng.lat;
      document.getElementById('longitude').value = latlng.lng;
      document.getElementById('radius').value = initialRadius;
    }



    function toggleMapVisibility() {
      var mapContainer = document.getElementById('map-container');
      var checkbox = document.getElementById('location-verification');

      if (checkbox.checked) {
        mapContainer.style.display = 'block';
        // Initialize the map
        initMap();
      } else {
        mapContainer.style.display = 'none';
      }
    }

    function updateRadius(value) {
      // Update the radius of the circle
      if (circle) {
        circle.setRadius(value);
      }

      // Update the radius value display and the hidden input field
      document.getElementById('radius-value').textContent = value;
      document.getElementById('radius').value = value; // This sets the value of the hidden input
    }

    function geocodeAddress() {
      var address = document.getElementById('address').value;
      if (address.trim() === '') {
        alert('Please enter an address.');
        return;
      }

      var url = 'https://nominatim.openstreetmap.org/search?format=json&q=' + encodeURIComponent(address);

      fetch(url)
        .then(response => response.json())
        .then(data => {
          if (data.length > 0) {
            var latlng = { lat: parseFloat(data[0].lat), lng: parseFloat(data[0].lon) };
            placeMarker(latlng);
            map.setView(latlng, 15); // Adjust the zoom level as needed
            updateRadius(document.getElementById('radius-slider').value); // Update the circle's radius
          } else {
            alert('Address not found.');
          }
        })
    }

    async function trySubmit() {
      var name = document.getElementById('event-name').value;
      try {
        const res = await fetch(`/api/name_taken?name=${name}`);
        const data = await res.json();

        // Remove any existing error popup
        const existingErrorPopup = document.getElementById("errorPopUp");
        if (existingErrorPopup) {
          existingErrorPopup.remove();
        }

        if (data.isTaken) {
          let div = document.createElement("div");
          div.setAttribute("class", "error-container");
          div.setAttribute("id", "errorPopUp");
          div.innerHTML = '<p class="error-text">Event Name Already Taken</p><button class="error-button" onclick="this.parentElement.remove()">Ok</button>'
          document.getElementById("eventName-field").appendChild(div); // Creates error popup
        } else {
          document.getElementById('hidden-submit').click(); // Submits
          // We submit through a button rather than form.submit() because it causes the browser to automatically check
          // if all required fields are filled in. With form.submit() we'd have to implement that ourselves.
        }
      } catch (error) {
        console.error(error);
      }
    }

  </script>
</body>

</html>